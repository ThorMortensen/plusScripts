#!/bin/bash


# install() {
#   echo "Command not supported: $1"
#   echo "Move to the root of the part you want to install and run:"
#   echo "cargo +stable install --path ."
# }

build() {
  CARGO_PROFILE=fast-release ./build-all.sh || exit 1
}

deploy() {
  echo "Deploying to $2"
  
  if [ -z "$3" ]; then
    build "$@"
    # ./ccupd_rootfs.sh $2

    TARGET_NAME=$2
    CCUPD_PATH="./output/cargo-target/target/rootfs-imx6ul.ccupd"

    echo "Copying over rootfs to device"
    auth-wrapper scp  "$CCUPD_PATH" "${TARGET_NAME}:/tmp/rootfs-imx6ul.ccupd"

    # Installing on remote
    echo "Starting ccupd install on the device"
    auth-wrapper ssh "$TARGET_NAME" sudo 'sh -c "ccupd install /tmp/rootfs-imx6ul.ccupd"'
    # auth-wrapper ssh "$TARGET_NAME" sudo 'sh -c "ccupd install --config-install=/etc/ccupd/iwg26-v3-ag/install.ini /tmp/rootfs-imx6ul.ccupd"'

    echo "Please wait for the device to come online (approx. 1-2 minutes)"
    echo "Done"

  else 
    source /usr/local/oecore-x86_64/environment-setup-cortexa7t2hf-neon-oe-linux-gnueabi || exit 1
    cargo build --target armv7-unknown-linux-gnueabihf --profile fast-release  || echo "No fast release... This must be old"; cargo build --target armv7-unknown-linux-gnueabihf || exit 1
    +scp-to-device $2 target/armv7-unknown-linux-gnueabihf/fast-release/$3 
    # auth-wrapper scp "target/armv7-unknown-linux-gnueabihf/fast-release/$3" "$2":/data/support/"$3" && dye bold green "Deployed $3" || dye bold red  "No file called $3. Deployment failed."
  fi


}

clean() {
  echo "Running \"cargo clean-recursive\""
  cargo clean-recursive
  if [ -d "output" ]; then
    echo "Removing output folder"
    sudo rm -rf output
  fi
}



install() {
  echo "Installing firmware-hal from $2"
  cargo +stable install --path $2
}

test() {
  cargo test
}

pre_push() {
  cargo fmt --all
  cargo clippy --release --all-targets --all-features --locked
  checks cargo-all
}

case "$1" in
  install)
    install "$@"
    ;;
  build)
    build "$@"
    ;;
  deploy)
    deploy "$@"
    ;;
  clean)
    clean "$@"
    ;;
  test)
    test "$@"
    ;;
  pre_push)
    pre_push "$@"
    ;;    
  *)
    echo "Command not supported: $1"
    exit 1
    ;;
esac
