#!/usr/bin/env bash

cd "$(dirname "$0")"

source ../workers/globals

install_dependancys() {
  $PS_DIR_PLUS/+update
  yay -S xclip git ruby sshfs ruby-dev nmap curl libudev-dev pkg-config ranger xautomation xbindkeys tig lnav expect
}

install_bundler_gems() {
  sudo gem install rake
  sudo gem install bundler
  bundler install
}

# install_gnome_stuff() {
#   create_and_write_if_missing "" ~/Templates/new_file
#   create_and_write_if_missing '#!/bin/bash' ~/Templates/new_script
#   create_and_write_if_missing "subl ." ~/.local/share/nautilus/scripts/Open_In_Sublime
#   chmod +x ~/.local/share/nautilus/scripts/Open_In_Sublime
# }

install_zsh_termianl() {

  if (whiptail --title "Install ZSH" --yesno "Do you want to install ZSH and oh-my-zsh? (If already installed select NO and only the zshrc file will be updated)" 8 78); then
    yay -S zsh
    #### Install Oh my ZSH
    sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
    git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions
    git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k
    chsh -s $(which zsh)
    # Log in and out
    sed -e '/ZSH_THEME=/s/^/#/g' -i ~/.zshrc
    sed -e '/plugins=(/s/^/#/g' -i ~/.zshrc
    sed -e '/  git/s/^/#/g' -i ~/.zshrc
    sed -e '/)/s/^/#/g' -i ~/.zshrc
    INSTALLED_ZSH="true"
  fi

  sed -e '/source $ZSH\/oh-my-zsh.sh/d' -i ~/.zshrc
  write_if_missing "####### To source QOL scripts ######" ~/.zshrc
  write_if_missing "source $PS_DIR_CONFIG/zshrc_stuff" ~/.zshrc
  write_if_missing "source \$ZSH/oh-my-zsh.sh" ~/.zshrc
  write_if_missing "source ~/.common_rc" ~/.zshrc

  if [ $INSTALLED_ZSH = "true" ]; then
    gnome-session-quit
  fi
}


add_bash_stuff(){
  write_if_missing "####### To source QOL scripts ######" ~/.bashrc
  write_if_missing "source $PS_DIR_CONFIG/bashrc_stuff" ~/.bashrc
  write_if_missing "source ~/.common_rc" ~/.bashrc
}

add_common_stuff(){
  create_and_write_if_missing "#### This rc file is shared between all terminals ###" ~/.common_rc
  write_if_missing "#             Put all your rc stuff here" ~/.common_rc
  write_if_missing "#####################################################" ~/.common_rc
  write_if_missing "PATH=\$PATH:$PS_DIR_PLUS" ~/.common_rc
  write_if_missing "export JAVA_HOME=/usr/lib/jvm/java-8-oracle" ~/.common_rc

  write_if_missing "alias rr='ranger'" ~/.common_rc
  write_if_missing "alias Ã¸='echo \"sourcing common_rc done!\" && source ~/.common_rc'" ~/.common_rc
}

disable_sudo(){
  write_if_missing_sudo "@includedir /etc/sudoers.d" /etc/sudoers
  write_if_missing_sudo "%$USER ALL=(ALL) NOPASSWD: ALL" /etc/sudoers
}


bundler_selection() {
  if (whiptail --title "Bundler" --yesno "Do you want to run Bundler to install ruby gem dependences?" 8 78); then
      install_bundler_gems
  fi
}

dependences_selection(){
  if (whiptail --title "Dependences" --yesno "Do you want to install dependences?" 8 78); then
      install_dependancys
  fi
  bundler_selection
}

changec_numpad_to_dot(){
  gsettings set org.gnome.desktop.input-sources xkb-options "['kpdl:period', 'kpdl:dotoss']"
  echo "Numpad comma is now period!"
}

changec_numpad_to_comma(){
  gsettings set org.gnome.desktop.input-sources xkb-options "['kpdl:period']"
}

add_plus_to_nautilus_gui(){
  ln -s ../+ "$HOME.local/share/nautilus/scripts/+"
}



#####################################################
# Main
#####################################################
                  # "Fix numpad"  "Change the numpad comma to dot!" \
                  # "Add + GUI"   "Add + scripts to nautilus" \

while true; do

  WHAT_TO_INTALL=$(whiptail --title "Menu example" --menu "Choose an install option" 20 50 10 \
                  "All"         "Installs everything (FOR ARCH!)." \
                  "Bash stuff"  "Only adds +scripts to bashrc." \
                  "ZSH stuff"   "Only adds +scripts to ZSH." \
                  "No sudo"     "Remove sudo password" \
                  "Dependences" "Only installs dependences." 3>&1 1>&2 2>&3)

  if [ -z "$WHAT_TO_INTALL" ]
  then
    echo "Nothing was touched..."
    exit
  fi


  case $WHAT_TO_INTALL in
      "All")
        dependences_selection
        add_common_stuff
        add_bash_stuff
        install_zsh_termianl
        add_plus_to_nautilus_gui
        install_gnome_stuff
        changec_numpad_to_dot
        disable_sudo
      ;;
      "All Raspi")
        dependences_selection
        add_common_stuff
        add_bash_stuff
        install_zsh_termianl
      ;;
      "Bash stuff")
        dependences_selection
        add_common_stuff
        add_bash_stuff
      ;;
      "ZSH stuff")
        dependences_selection
        add_common_stuff
        install_zsh_termianl
      ;;
      "Fix numpad")
        dependences_selection
        changec_numpad_to_dot
      ;;
      "No sudo")
        disable_sudo
      ;;
      "Add + GUI")
        add_plus_to_nautilus_gui
      ;;
      "Dependences")
        dependences_selection
      ;;
  esac

  if (whiptail --title "Finished" --yesno "Done installing?" 8 78); then
    install_gnome_stuff
    exit 0
  fi

done

