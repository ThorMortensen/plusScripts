# Bit index Description
@registers = {
:SLP_statusBits => [
  "system running (CSC OK)",
  "relay1 feedback (0-closed, 1-open)",
  "relay2 feedback (0-closed, 1-open)",
  "relay3 feedback (0-closed, 1-open)",
  "relay4 feedback (0-closed, 1-open)",
  "power switch 1 (0-open, 1-closed)",
  "power switch 2 (0-open, 1-closed)",
  "clamp enable (0-disabled, 1-enabled)",
  "OVP1 trigger",
  "OVP2 trigger",
  "UVP trigger",
  "OCP1 trigger",
  "OCP 2 trigger",
  "OCP negative trigger",
  "Zener input to_s_n",
  "Zener input to_fn_n",
  "Zener input OVL_Iz_n",
  "Safetylink1_n inhibit (also program inhibit for most,EEProm parameter like IP, OVP, OCP etc. *Active low, inhibit means FETS and relays are forced OFF )",
  "Unused",
  "UVP_delay_Trig",
  "OTP_trig",
  "Data_buffer_ready",
  "Data_buffer_overrun",
  "CRC_error"
],

:SLP_safetyLink_mask => [
  "OVP1",
  "OVP2",
  "UVP",
  "OCP1",
  "OCP2",
  "OCP negative",
  "Local",
  "External latched trigger or any trigger output is active in the other saftylink",
  "UVP delayed trig of relay",
],

:SAS_prot_int_events => [
  "Internal_event",
  "External_trip_ih",
  "temp_sensor_fail_d",
  "OTPs_hw_d(0)",
  "OTPs_hw_d(1)",
  "OTPs_soft_d(0)",
  "OTPs_soft_d(1)",
  "OTPs_soft_d(2)",
  "PG_wait(0) <- PFC Power Good",
  "PG_wait(1) <- Tracking DC/DC Power Good",
  "PG_wait(2) <- Linear Output Power Good",
  "EEPROM_CRC_error_i",
  "OVP_trig_ih",
  "OCP_trig_ih",
  "Fan_failed_i_b_d",
  "major_internal_fault",
  "high_dissipation_fault_i",
  "Fan_failed_i",
  "Lin_prot_trig_ih <- Linear protection triggered",
  "0",
  "Shutdown_oh_b(0) <- PFC Power Good",
  "Shutdown_oh_b(1) <- Tracking DC/DC Power Good",
  "Shutdown_oh_b(2) <- Linear Output Power Good",
  "run_control_loop_o_b",
  "PG_ih(0) <- PFC Power Good (raw input)",
  "PG_ih(1) <- Tracking DC/DC Power Good (raw input)",
  "PG_ih(2) <- Linear Output Power Good (raw input)",
  "FLP_on_oh_b <- First Level Protection (Linear Output) On/Off command",
  "FLP_reset_oh_b <- Linear Output Reset Protection",
  "0",
  "0",
  "0",
],

:SAS_prot_status => [
  "Internal_event_latch",
  "External_trip_ih_latch",
  "temp_sensor_fail_d_l",
  "OTPs_hw_d_l(0)",
  "OTPs_hw_d_l(1)",
  "OTPs_soft_d_l(0)",
  "OTPs_soft_d_l(1)",
  "OTPs_soft_d_l(2)",
  "PGx_failed_latch(0) <- PFC Power Good",
  "PGx_failed_latch(1) <- Tracking DC/DC Power Good",
  "PGx_failed_latch(2) <- Linear Output Power Good",
  "EEPROM_CRC_error_i_latch",
  "OVP_trig_ih_latch",
  "OCP_trig_ih_latch",
  "Fan_failed_i_b_d_l",
  "deadlocked",
  "high_dissipation_fault_i_latch",
  "high_dissipation_fault_insisting",
  "0",
  "0",
  "Safety_link_LED_on",
  "Safety_link_LED_blinking",
  "Internal_event_LED_on",
  "Internal_event_LED_blinking",
  "state_now_debug(0) <- S_on_PFC: 001 | S_on_linear: 011 | S_clear_prot: 101",
  "state_now_debug(1) <- S_on_switch: 010 | S_on_linear: 011 | S_start_loop: 110",
  "state_now_debug(2) <- S_on_clamp: 100 | S_clear_prot: 101 | S_start_loop: 110",
  "r_to_std_logic(reset)",
  "output_on",
  "Close_external_relay_oh_b",
  "SafetyLink_oh_b",
  "protection_active_i",
],


}


    # <- S_on_PFC: 001 | S_on_switch: 010 | S_on_linear: 011 | S_on_clamp: 100 | S_clear_prot: 101 | S_start_loop: 110


    # when PROT_LATCHES_ADDR        => r_amba_r (sas2apb_i_l.prot_latches     ,apb_o.prdata                            ); --clocked ok   
    # when PROT_EVENTS_ADDR         => r_amba_r (sas2apb_i_l.prot_events      ,apb_o.prdata                            ); --clocked ok                                                         
    # apb_Status0              => sas2apb.prot_events,
    # apb_Status1              => sas2apb.prot_latches

    # ------------------------------------------------------------------
    # DO_SOMETHING(prot_int_events,        ATTRIB_R,         OFFSET_PROT_EVENTS,          %08x,   MAXVAL(32),                1, NO_DELAY)    \
    # when PROT_EVENTS_ADDR         => r_amba_r (sas2apb_i_l.prot_events      ,apb_o.prdata                            ); --clocked ok                                                         
    # apb_Status0              => sas2apb.prot_events,
    # apb_Status0(31 downto 0) <=   

    # "Internal_event",
    # "External_trip_ih",
    # "temp_sensor_fail_d",
    # "OTPs_hw_d(0)",
    # "OTPs_hw_d(1)",
    # "OTPs_soft_d(0)",
    # "OTPs_soft_d(1)",
    # "OTPs_soft_d(2)",
    # "PG_wait(0)",
    # "PG_wait(1)",
    # "PG_wait(2)",
    # "EEPROM_CRC_error_i",
    # "OVP_trig_ih",
    # "OCP_trig_ih",
    # "Fan_failed_i_b_d",
    # "major_internal_fault",
    # "high_dissipation_fault_i",
    # "Fan_failed_i",
    # "Lin_prot_trig_ih",
    # "0",
    # "Shutdown_oh_b(0)",
    # "Shutdown_oh_b(1)",
    # "Shutdown_oh_b(2)",
    # "run_control_loop_o_b",
    # "PG_ih(0)",
    # "PG_ih(1)",
    # "PG_ih(2)",
    # "FLP_on_oh_b",
    # "FLP_reset_oh_b",
    # "0",
    # "0",
    # "0",

    # ------------------------------------------------------------------

    #     DO_SOMETHING(prot_status,            ATTRIB_R ,        OFFSET_PROT_LATCHES,         %08x,   MAXVAL(32)  ,              1, NO_DELAY)    \
    # when PROT_LATCHES_ADDR        => r_amba_r (sas2apb_i_l.prot_latches     ,apb_o.prdata                            ); --clocked ok   
    # apb_Status1              => sas2apb.prot_latches
    # apb_Status1(31 downto 0) <= 

    # "Internal_event_latch",
    # "External_trip_ih_latch",
    # "temp_sensor_fail_d_l",
    # "OTPs_hw_d_l(0)",
    # "OTPs_hw_d_l(1)",
    # "OTPs_soft_d_l(0)",
    # "OTPs_soft_d_l(1)",
    # "OTPs_soft_d_l(2)",
    # "PGx_failed_latch(0)",
    # "PGx_failed_latch(1)",
    # "PGx_failed_latch(2)",
    # "EEPROM_CRC_error_i_latch",
    # "OVP_trig_ih_latch",
    # "OCP_trig_ih_latch",
    # "Fan_failed_i_b_d_l",
    # "deadlocked",
    # "high_dissipation_fault_i_latch",
    # "high_dissipation_fault_insisting",
    # "0",
    # "0",
    # "Safety_link_LED_on",
    # "Safety_link_LED_blinking",
    # "Internal_event_LED_on",
    # "Internal_event_LED_blinking",
    # "state_now_debug",
    # "r_to_std_logic(reset)",
    # "output_on",
    # "Close_external_relay_oh_b",
    # "SafetyLink_oh_b",
    # "protection_active_i",
